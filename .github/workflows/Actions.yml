#Nom du workflow
name: NodeJS App CI/CD

#Définition des déclencheurs des événements
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
             
# Définition des séquences de travail à exécuter
jobs:
# Définition des  actions de l'intégration continue
  ci:
    runs-on: ubuntu-latest # choix de l'OS
    container:
      image: node

    steps:
      - uses: actions/checkout@v1
      - name: Install & Tests
        run: |
          npm install
          npm test

# Définition des  actions de livraison continue
  cd:
    runs-on: ubuntu-latest
    needs: ci # si l'étape CI est échouée l'exécution sera stoper

    steps:
      - uses: actions/checkout@v1 #Accès aux fichiers du référentiel
      - name: Docker login
        run: docker login -u ${{ secrets.Docker_User }} -p ${{ secrets.Docker_Password }} #Login au Docker Hub
      - name: Build
        run: docker build -t node-app . #Construction de l'image docker
      - name: Tags
        run: |
          docker tag node-app ${{ secrets.Docker_User }}/node-app:${{ github.sha }}  #Affectation d'un nom unique à l'image
          docker tag node-app ${{ secrets.Docker_User }}/node-app:latest  #Indication de la version d'image 
      - name: Push
        run: |
          docker push ${{ secrets.Docker_User}}/node-app:${{ github.sha }} # Envoi de l'image au docker Hub
          docker push ${{ secrets.Docker_User }}/node-app:latest
        
